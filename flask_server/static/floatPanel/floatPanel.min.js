(function (b) {
    var j = b;
    var l = j.document;
    var c = {};

    function h(q, o) {
        var n = {
            width: 300,
            height: "auto",
            header: {enabled: true, content: "Panel title",},
            footer: {enabled: true, content: "Panel footer",},
            body: {enabled: true, content: "Panel content",},
            closeBtn: true,
            backDrop: false,
            floatHeight: 10,
            floatHeightInvolve: false,
        };
        c[q] = new f(q);
        var p = n;
        if (o) {
            p = m(n, o)
        }
        c[q].set(p);
        c[q].reposition();
        return c[q]
    }

    function f(r) {
        var n = l.body;
        if (!r) {
            throw ("id required!")
        } else {
            if (typeof r !== "string") {
                throw ("invalid id!")
            }
        }
        Object.defineProperty(this, "id", {configurable: true, enumerable: true, value: r, writable: false,});
        this.floatHeight = 0;
        this.floatHeightInvolve = false;
        this.direction = "up";
        this.edgeDetection = true;
        Object.defineProperty(this, "_backDropNode", {
            configurable: true,
            enumerable: false,
            value: null,
            writable: true,
        });
        var p = l.getElementById(r);
        if (p) {
            p.parentNode.removeChild(p)
        }
        var q = l.createElement("div");
        q.setAttribute("class", "floatPanel invisible");
        q.id = r;
        n.appendChild(q);
        Object.defineProperty(this, "node", {
            configurable: true,
            enumerable: true,
            value: l.getElementById(r),
            writable: false,
        });
        var o = '<div class="panel panel-blue">' + '<div class="panel-header">' + '<h3 class="panel-title">' + "</h3>" + "</div>" + '<div class="panel-body">' + "</div>" + '<div class="panel-footer">' + "</div>" + "</div>";
        this.node.innerHTML = o;
        Object.defineProperties(this, {
            width: {
                configurable: true, enumerable: true, get: function () {
                    return i(this.node, "width")
                }, set: function (s) {
                    if (typeof s === "number") {
                        this.node.style.width = s + "px"
                    } else {
                        this.node.style.width = s
                    }
                },
            }, height: {
                configurable: true, enumerable: true, get: function () {
                    return i(this.node, "height")
                }, set: function (s) {
                    if (typeof s === "number") {
                        this.node.style.height = s + "px"
                    } else {
                        this.node.style.height = s
                    }
                },
            }, left: {
                configurable: true, enumerable: true, get: function () {
                    return Number(i(this.node, "left").replace("px", ""))
                }, set: function (s) {
                    if (typeof s === "number") {
                        this.node.style.left = s + "px"
                    } else {
                        this.node.style.left = s
                    }
                },
            }, top: {
                configurable: true, enumerable: true, get: function () {
                    return Number(i(this.node, "top").replace("px", ""))
                }, set: function (s) {
                    if (typeof s === "number") {
                        this.node.style.top = s + "px"
                    } else {
                        this.node.style.top = s
                    }
                },
            }, zIndex: {
                configurable: true, enumerable: true, get: function () {
                    return Number(i(this.node, "z-index"))
                }, set: function (s) {
                    this.node.style["z-index"] = s;
                    if (this._backDropNode) {
                        this._backDropNode.style["z-index"] = Number(s) - 1
                    }
                },
            },
        })
    }

    f.prototype = {
        constructor: f, show: function (q, r) {
            var n = arguments;
            var p = l.querySelector("html");
            for (var o = 0; o < n.length; o++) {
                if (typeof n[o] == "object") {
                    if (n[o].pageX && n[o].pageY) {
                        this.reposition(n[o])
                    }
                }
                if (typeof n[o] == "function") {
                    n[o].call(this)
                }
            }
            if (this._backDropNode) {
                this._backDropNode.style.display = "block";
                l.querySelector("html").style.overflow = "hidden"
            }
            k(this.node, "active");
            this.node.style.display = "block";
            a(this.node, "invisible");
            return this
        }, hide: function (q) {
            if (q && q.pageX && q.pageY) {
                var s = this.width + 10;
                var n = this.height + 1;
                var p = Number(q.pageX);
                var o = Number(q.pageY);
                var r = this.top;
                if (this.floatHeightInvolve == true) {
                    var n = this.height + 1 + this.floatHeight;
                    if (this.direction && this.direction.toLowerCase() === "down") {
                        r -= this.floatHeight
                    }
                }
                if (p >= this.left && p <= this.left + s && o >= r && o <= r + n) {
                    return 0
                } else {
                    if (this._backDropNode) {
                        this._backDropNode.style.display = "none";
                        l.querySelector("html").style.overflow = ""
                    }
                    k(this.node, "invisible");
                    a(this.node, "active");
                    this.node.style.removeProperty("max-height");
                    this.node.style.removeProperty("max-width");
                    this.node.style.display = "none"
                }
            } else {
                if (this._backDropNode) {
                    this._backDropNode.style.display = "none";
                    l.querySelector("html").style.overflow = ""
                }
                k(this.node, "invisible");
                a(this.node, "active");
                this.node.style.removeProperty("max-height");
                this.node.style.removeProperty("max-width");
                this.node.style.display = "none"
            }
            return this
        }, set: function (o) {
            if (o) {
                if (o.width) {
                    this.width = o.width
                }
                if (o.height) {
                    this.height = o.height
                }
                if (o.header) {
                    if (o.header.enabled === true) {
                        this.node.querySelector("#" + this.id + " > .panel >.panel-header").style.display = "block"
                    } else {
                        if (o.header.enabled === false) {
                            this.node.querySelector("#" + this.id + " > .panel >.panel-header").style.display = "none"
                        }
                    }
                    if (o.header.content) {
                        this.node.querySelector("#" + this.id + " > .panel >.panel-header").innerHTML = o.header.content
                    }
                }
                if (o.footer) {
                    if (o.footer.enabled === true) {
                        this.node.querySelector("#" + this.id + " > .panel >.panel-footer").style.display = "block"
                    } else {
                        if (o.footer.enabled === false) {
                            this.node.querySelector("#" + this.id + " > .panel >.panel-footer").style.display = "none"
                        }
                    }
                    if (o.footer.content) {
                        this.node.querySelector("#" + this.id + " > .panel >.panel-footer").innerHTML = o.footer.content
                    }
                }
                if (o.body) {
                    if (o.body.enabled === true) {
                        this.node.querySelector("#" + this.id + " > .panel >.panel-body").style.display = "block"
                    } else {
                        if (o.body.enabled === false) {
                            this.node.querySelector("#" + this.id + " > .panel >.panel-body").style.display = "none"
                        }
                    }
                    if (o.body.content) {
                        this.node.querySelector("#" + this.id + " > .panel >.panel-body").innerHTML = o.body.content
                    }
                }
                if (o.closeBtn === true) {
                    var p = "";
                    p = this.node.querySelector("#" + this.id + " >button.close-button");
                    if (p) {
                        p.parentNode.removeChild(p)
                    }
                    var n = '<button aria-label="关闭" type="button" class="Button close-button Button-plain">' + '<svg class="closeIcon" fill="currentColor" viewBox="0 0 24 24" width="24" height="24" >' + '<path d="M13.486 12l5.208-5.207a1.048 1.048 0 0 0-.006-1.483 1.046 1.046 0 0 0-1.482-.005L12 10.514 6.793 5.305a1.048 1.048 0 0 0-1.483.005 1.046 1.046 0 0 0-.005 1.483L10.514 12l-5.208 5.207a1.048 1.048 0 0 0 .006 1.483 1.046 1.046 0 0 0 1.482.005L12 13.486l5.207 5.208a1.048 1.048 0 0 0 1.483-.006 1.046 1.046 0 0 0 .005-1.482L13.486 12z" ' + 'fill-rule="evenodd"></path>' + "</svg >" + "</button >";
                    this.node.insertAdjacentHTML("afterbegin", n);
                    this.node.querySelector("#" + this.id + " >button.close-button").addEventListener("click", (function (s) {
                        return function (t) {
                            s.hide()
                        }
                    }(this)))
                } else {
                    if (o.closeBtn === false) {
                        var p = "";
                        p = this.node.querySelector("#" + this.id + " >button.close-button");
                        if (p) {
                            p.parentNode.removeChild(p)
                        }
                    }
                }
                if (o.backDrop === true) {
                    var r = l.querySelector("#" + this.id + "-backDrop");
                    if (r) {
                        r.parentNode.removeChild(r)
                    }
                    var q = '<div class="floatPanel-backdrop" id="' + this.id + '-backDrop" style="z-index:' + (this.zIndex - 1) + '; display:none;"></div>';
                    this.node.insertAdjacentHTML("beforebegin", q);
                    this._backDropNode = l.getElementById(this.id + "-backDrop")
                } else {
                    if (o.backDrop === false) {
                        if (this._backDropNode) {
                            this._backDropNode.parentNode.removeChild(this._backDropNode);
                            this._backDropNode = null
                        }
                    }
                }
                if (o.direction) {
                    o.direction.toLowerCase() === "down" ? this.direction = "down" : this.direction = "up"
                }
                if (o.edgeDetection) {
                    o.edgeDetection == false ? this.edgeDetection = false : this.edgeDetection = true
                }
                if (o.floatHeight) {
                    this.floatHeight = isNaN(Number(o.floatHeight)) ? this.floatHeight : Number(o.floatHeight)
                }
                if (o.floatHeightInvolve) {
                    this.floatHeightInvolve = !!o.floatHeightInvolve
                }
            }
            return this
        }, reposition: function (n) {
            var t = l.documentElement.clientWidth;
            var p = l.documentElement.clientHeight;
            var r = g().scrollTop;
            var v = g().scrollLeft;
            var u = this.width;
            var s = this.height + 1;
            if (!n || !n.pageX || !n.pageY) {
                var n = {};
                n.pageX = (t / 2) + v;
                if (this.direction && this.direction.toLowerCase() === "down") {
                    n.pageY = (p / 2) + r - (s / 2) - this.floatHeight
                } else {
                    n.pageY = (p / 2) + r + (s / 2) + this.floatHeight
                }
            }
            var q = Number(n.pageX);
            q = q - u / 2;
            var o = Number(n.pageY);
            if (this.direction && this.direction.toLowerCase() === "down") {
                o = o + this.floatHeight
            } else {
                o = o - s - this.floatHeight
            }
            if (this.edgeDetection == false) {
                this.node.style.left = q + "px";
                this.node.style.top = o + "px"
            } else {
                if (u > t) {
                    this.node.style.left = (5 + v) + "px";
                    this.node.style["max-width"] = (t - 10) + "px";
                    this.node.style["overflow-x"] = "auto"
                } else {
                    if ((q + u) < (t + v)) {
                        if (q < v) {
                            this.node.style.left = (5 + v) + "px"
                        } else {
                            this.node.style.left = q + "px"
                        }
                    } else {
                        this.node.style.left = (q - (q + u - t - v)) + "px"
                    }
                }
                if (this.height > p) {
                    this.node.style.top = (5 + r) + "px";
                    this.node.style["max-height"] = (p - 10) + "px";
                    this.node.style["overflow-y"] = "auto"
                } else {
                    if (o < r) {
                        this.node.style.top = (5 + r) + "px"
                    } else {
                        if (s + o - r < p) {
                            this.node.style.top = o + "px"
                        } else {
                            this.node.style.top = (o - (o - r + s - p)) + "px"
                        }
                    }
                }
            }
            return this
        }, destroy: function () {
            if (this._backDropNode) {
                this._backDropNode.parentNode.removeChild(this._backDropNode);
                delete this._backDropNode
            }
            this.node.parentNode.removeChild(this.node);
            for (var n in this) {
                delete this[n]
            }
            return null
        }, mouseleave: function (n) {
            this.node.addEventListener("mouseleave", n);
            return this
        }, mouseenter: function (n) {
            this.node.addEventListener("mouseenter", n);
            return this
        },
    };

    function i(p, o) {
        var n = null;
        switch (o) {
            case"width":
                d(p, o, function () {
                    n = p.offsetWidth
                });
                break;
            case"height":
                d(p, o, function () {
                    n = p.offsetHeight
                });
                break;
            default:
                n = d(p, o);
                break
        }
        return n
    }

    function d(p, o, q) {
        var n = null;
        p.style["visibility"] = "hidden";
        p.style["position"] = "absolute";
        p.style["display"] = "block";
        if (q) {
            q()
        } else {
            n = j.getComputedStyle(p)[o]
        }
        p.style["visibility"] = "";
        p.style["position"] = "";
        p.style["display"] = "";
        if (n) {
            return n
        }
    }

    function e(n, o) {
        return !!n.className.match(new RegExp("(\\s|^)" + o + "(\\s|$)"))
    }

    function k(n, o) {
        if (!e(n, o)) {
            n.className += " " + o
        }
    }

    function a(n, o) {
        if (e(n, o)) {
            n.className = n.className.replace(new RegExp("(\\s|^)" + o + "(\\s|$)"), " ")
        }
    }

    function m(p, o) {
        if (o != null) {
            for (var n in o) {
                if (o.hasOwnProperty(n)) {
                    if (Array.isArray(o[n])) {
                        p[n] = []
                    } else {
                        if (o[n] === null) {
                            p[n] = null;
                            continue
                        }
                    }
                    p[n] = typeof o[n] === "object" ? m(p[n], o[n]) : o[n]
                }
            }
            return p
        }
    }

    function g() {
        var o = j.pageXOffset !== undefined;
        var p = ((l.compatMode || "") === "CSS1Compat");
        var n = o ? j.pageXOffset : p ? l.documentElement.scrollLeft : l.body.scrollLeft;
        var q = o ? j.pageYOffset : p ? l.documentElement.scrollTop : l.body.scrollTop;
        return {scrollTop: q, scrollLeft: n,}
    }

    if (typeof module !== "undefined" && module.exports) {
        module.exports = h
    } else {
        j.FloatPanel = h
    }
})("undefined" !== typeof window ? window : this);